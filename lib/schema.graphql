"Valida los tipos de nivel"
enum Level {
  principiante
  intermedio
  avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course {
  _id: ID!
  title: String!
  teachers: String
  desc: String!
  topic: String @deprecated
  people: [Student]
  level: Level
}

interface Person {
  _id: ID!
  name: String!
  email: String!
}

type Student implements Person {
  _id: ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person{
  _id: ID!
  name: String!
  email: String!
  phone: String
}

type Query {
  "Devuelve todos los cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(id: ID!): Course
  "Devuelve todos los estudiantes"
  getPeople: [Person]
  "Devuelve un estudiante"
  getPerson(id: ID!): Person
  "Ejecuta una busqueda global"
  searchItems(keyword: String!): [GlobalSearch]
}

input CourseInput{
  title: String!
  teacher: String
  desc: String!
  topic: String
  level: Level
}

input CourseEditInput{
  title: String
  teacher: String
  desc: String
  topic: String
}

input PersonInput{
  name: String!
  email: String!
  phone: String
  avatar: String
}

input PersonEditInput{
  name: String
  email: String
  phone: String
  avatar: String
}

type Mutation {
  "Crea un curso"
  createCourse(input: CourseInput!): Course
  "Edita un Curso"
  editCourse(_id: ID!, input: CourseEditInput): Course
  "Crea una persona"
  createPerson(input: PersonInput!): Person
  "Edita un Estudiante"
  editPerson(_id: ID!, input: PersonEditInput): Person
  "Borra Persona"
  deletePerson(_id: ID!): Person
  "Borrar Curso"
  deleteCourse(_id: ID!): Course
  "Agrega a una persona a un curso"
  addPeople(courseID: ID!, personID: ID!): Course
}
